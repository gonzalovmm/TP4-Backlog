name: CI (Gradle)

on:
  pull_request:
    branches: [develop]
  push:
    branches: [develop]
permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  lint_format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: "17" }
      - uses: gradle/actions/setup-gradle@v3
      - run: chmod +x ./gradlew
      - name: Checkstyle + Spotless (no modifica c√≥digo)
        run: |
          ./gradlew checkstyleMain checkstyleTest --no-daemon
          ./gradlew spotlessCheck --no-daemon

  unit_tests:
    needs: [lint_format]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: "17" }
      - uses: gradle/actions/setup-gradle@v3
      - run: chmod +x ./gradlew
      - name: Unit tests
        run: ./gradlew test --no-daemon
      - name: Publicar reportes (unit)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-report
          path: build/reports/tests/test
      - name: Anotar resultados (unit) en el PR
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository }}
        uses: dorny/test-reporter@v1
        with:
          name: JUnit (unit)
          path: build/test-results/test/*.xml
          reporter: java-junit
          fail-on-error: false

  build:
    needs: [unit_tests]              #pruebaaaaaaaaa
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: "17" }
      - uses: gradle/actions/setup-gradle@v3
      - run: sed -i 's/\r$//' gradlew
      - run: chmod +x ./gradlew
      - name: Assemble
        run: ./gradlew assemble --no-daemon

